GAS LISTING /tmp/cco8dxKI.s 			page 1


   1              		.file	"vuln.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.rodata
   5              	.LC0:
   6 0000 5C782530 		.string	"\\x%02hhx"
   6      32686878 
   6      00
   7              		.text
   8              		.globl	print_escaped
  10              	print_escaped:
  11              	.LFB2:
  12              		.file 1 "vuln.c"
   1:vuln.c        **** #include <stdlib.h>
   2:vuln.c        **** #include <strings.h>
   3:vuln.c        **** #include <unistd.h>
   4:vuln.c        **** #include <stdio.h>
   5:vuln.c        **** #include <string.h>
   6:vuln.c        **** #include <alloca.h>
   7:vuln.c        **** #include <ctype.h>
   8:vuln.c        **** 
   9:vuln.c        **** #include "my_malloc.h"
  10:vuln.c        **** 
  11:vuln.c        **** #define MAX_GRP 1001
  12:vuln.c        **** 
  13:vuln.c        **** #define err_abort(x) do { \
  14:vuln.c        ****       if (!(x)) {\
  15:vuln.c        ****          fprintf(stderr, "Fatal error: %s:%d: ", __FILE__, __LINE__);   \
  16:vuln.c        ****          perror(""); \
  17:vuln.c        ****          exit(1);\
  18:vuln.c        ****       }\
  19:vuln.c        ****    } while (0)
  20:vuln.c        **** 
  21:vuln.c        **** void print_escaped(FILE *fp, const char* buf, unsigned len) {
  13              		.loc 1 21 0
  14              		.cfi_startproc
  15 0000 55       		pushl	%ebp
  16              		.cfi_def_cfa_offset 8
  17              		.cfi_offset 5, -8
  18 0001 89E5     		movl	%esp, %ebp
  19              		.cfi_def_cfa_register 5
  20 0003 83EC18   		subl	$24, %esp
  22:vuln.c        ****    int i;
  23:vuln.c        ****    for (i=0; i < len; i++) {
  21              		.loc 1 23 0
  22 0006 C745F400 		movl	$0, -12(%ebp)
  22      000000
  23 000d E9A40000 		jmp	.L2
  23      00
  24              	.L6:
  24:vuln.c        ****       if (isprint(buf[i])) {
  25              		.loc 1 24 0
  26 0012 E8FCFFFF 		call	__ctype_b_loc
  26      FF
  27 0017 8B00     		movl	(%eax), %eax
  28 0019 8B4DF4   		movl	-12(%ebp), %ecx
  29 001c 8B550C   		movl	12(%ebp), %edx
GAS LISTING /tmp/cco8dxKI.s 			page 2


  30 001f 01CA     		addl	%ecx, %edx
  31 0021 0FB612   		movzbl	(%edx), %edx
  32 0024 0FBED2   		movsbl	%dl, %edx
  33 0027 01D2     		addl	%edx, %edx
  34 0029 01D0     		addl	%edx, %eax
  35 002b 0FB700   		movzwl	(%eax), %eax
  36 002e 0FB7C0   		movzwl	%ax, %eax
  37 0031 25004000 		andl	$16384, %eax
  37      00
  38 0036 85C0     		testl	%eax, %eax
  39 0038 7453     		je	.L3
  25:vuln.c        ****          if (buf[i] == '\\')
  40              		.loc 1 25 0
  41 003a 8B55F4   		movl	-12(%ebp), %edx
  42 003d 8B450C   		movl	12(%ebp), %eax
  43 0040 01D0     		addl	%edx, %eax
  44 0042 0FB600   		movzbl	(%eax), %eax
  45 0045 3C5C     		cmpb	$92, %al
  46 0047 7521     		jne	.L4
  26:vuln.c        ****             fputc(buf[i], stderr);
  47              		.loc 1 26 0
  48 0049 8B150000 		movl	stderr, %edx
  48      0000
  49 004f 8B4DF4   		movl	-12(%ebp), %ecx
  50 0052 8B450C   		movl	12(%ebp), %eax
  51 0055 01C8     		addl	%ecx, %eax
  52 0057 0FB600   		movzbl	(%eax), %eax
  53 005a 0FBEC0   		movsbl	%al, %eax
  54 005d 83EC08   		subl	$8, %esp
  55 0060 52       		pushl	%edx
  56 0061 50       		pushl	%eax
  57 0062 E8FCFFFF 		call	fputc
  57      FF
  58 0067 83C410   		addl	$16, %esp
  59              	.L4:
  27:vuln.c        ****          fputc(buf[i], stderr);
  60              		.loc 1 27 0
  61 006a 8B150000 		movl	stderr, %edx
  61      0000
  62 0070 8B4DF4   		movl	-12(%ebp), %ecx
  63 0073 8B450C   		movl	12(%ebp), %eax
  64 0076 01C8     		addl	%ecx, %eax
  65 0078 0FB600   		movzbl	(%eax), %eax
  66 007b 0FBEC0   		movsbl	%al, %eax
  67 007e 83EC08   		subl	$8, %esp
  68 0081 52       		pushl	%edx
  69 0082 50       		pushl	%eax
  70 0083 E8FCFFFF 		call	fputc
  70      FF
  71 0088 83C410   		addl	$16, %esp
  72 008b EB25     		jmp	.L5
  73              	.L3:
  28:vuln.c        ****       }
  29:vuln.c        ****       else fprintf(stderr, "\\x%02hhx", buf[i]);
  74              		.loc 1 29 0
  75 008d 8B55F4   		movl	-12(%ebp), %edx
  76 0090 8B450C   		movl	12(%ebp), %eax
GAS LISTING /tmp/cco8dxKI.s 			page 3


  77 0093 01D0     		addl	%edx, %eax
  78 0095 0FB600   		movzbl	(%eax), %eax
  79 0098 0FBED0   		movsbl	%al, %edx
  80 009b A1000000 		movl	stderr, %eax
  80      00
  81 00a0 83EC04   		subl	$4, %esp
  82 00a3 52       		pushl	%edx
  83 00a4 68000000 		pushl	$.LC0
  83      00
  84 00a9 50       		pushl	%eax
  85 00aa E8FCFFFF 		call	fprintf
  85      FF
  86 00af 83C410   		addl	$16, %esp
  87              	.L5:
  23:vuln.c        ****       if (isprint(buf[i])) {
  88              		.loc 1 23 0 discriminator 2
  89 00b2 8345F401 		addl	$1, -12(%ebp)
  90              	.L2:
  23:vuln.c        ****       if (isprint(buf[i])) {
  91              		.loc 1 23 0 is_stmt 0 discriminator 1
  92 00b6 8B45F4   		movl	-12(%ebp), %eax
  93 00b9 3B4510   		cmpl	16(%ebp), %eax
  94 00bc 0F8250FF 		jb	.L6
  94      FFFF
  30:vuln.c        ****    }
  31:vuln.c        **** }
  95              		.loc 1 31 0 is_stmt 1
  96 00c2 90       		nop
  97 00c3 C9       		leave
  98              		.cfi_restore 5
  99              		.cfi_def_cfa 4, 4
 100 00c4 C3       		ret
 101              		.cfi_endproc
 102              	.LFE2:
 104              		.globl	auth
 106              	auth:
 107              	.LFB3:
  32:vuln.c        **** 
  33:vuln.c        **** /************ Function vulnerable to buffer overflow on stack ***************/
  34:vuln.c        **** 
  35:vuln.c        **** int auth(const char *username, int ulen, const char *pass, int plen) {
 108              		.loc 1 35 0
 109              		.cfi_startproc
 110 00c5 55       		pushl	%ebp
 111              		.cfi_def_cfa_offset 8
 112              		.cfi_offset 5, -8
 113 00c6 89E5     		movl	%esp, %ebp
 114              		.cfi_def_cfa_register 5
 115 00c8 83EC28   		subl	$40, %esp
 116 00cb 8B4508   		movl	8(%ebp), %eax
 117 00ce 8945E4   		movl	%eax, -28(%ebp)
 118 00d1 8B4510   		movl	16(%ebp), %eax
 119 00d4 8945E0   		movl	%eax, -32(%ebp)
 120              		.loc 1 35 0
 121 00d7 65A11400 		movl	%gs:20, %eax
 121      0000
 122 00dd 8945F4   		movl	%eax, -12(%ebp)
GAS LISTING /tmp/cco8dxKI.s 			page 4


 123 00e0 31C0     		xorl	%eax, %eax
  36:vuln.c        ****   char *user = alloca(LEN2 + (random() % LEN2));
 124              		.loc 1 36 0
 125 00e2 E8FCFFFF 		call	random
 125      FF
 126 00e7 89C2     		movl	%eax, %edx
 127 00e9 89D0     		movl	%edx, %eax
 128 00eb C1F81F   		sarl	$31, %eax
 129 00ee C1E818   		shrl	$24, %eax
 130 00f1 01C2     		addl	%eax, %edx
 131 00f3 0FB6D2   		movzbl	%dl, %edx
 132 00f6 29C2     		subl	%eax, %edx
 133 00f8 89D0     		movl	%edx, %eax
 134 00fa 05000100 		addl	$256, %eax
 134      00
 135 00ff 8D500F   		leal	15(%eax), %edx
 136 0102 B8100000 		movl	$16, %eax
 136      00
 137 0107 83E801   		subl	$1, %eax
 138 010a 01D0     		addl	%edx, %eax
 139 010c B9100000 		movl	$16, %ecx
 139      00
 140 0111 BA000000 		movl	$0, %edx
 140      00
 141 0116 F7F1     		divl	%ecx
 142 0118 6BC010   		imull	$16, %eax, %eax
 143 011b 29C4     		subl	%eax, %esp
 144 011d 89E0     		movl	%esp, %eax
 145 011f 83C00F   		addl	$15, %eax
 146 0122 C1E804   		shrl	$4, %eax
 147 0125 C1E004   		sall	$4, %eax
 148 0128 8945EC   		movl	%eax, -20(%ebp)
  37:vuln.c        ****   // make offsets unique for each group
  38:vuln.c        **** 
  39:vuln.c        ****   bcopy(username, user, ulen); // possible buffer overflow 
 149              		.loc 1 39 0
 150 012b 8B450C   		movl	12(%ebp), %eax
 151 012e 83EC04   		subl	$4, %esp
 152 0131 50       		pushl	%eax
 153 0132 FF75EC   		pushl	-20(%ebp)
 154 0135 FF75E4   		pushl	-28(%ebp)
 155 0138 E8FCFFFF 		call	bcopy
 155      FF
 156 013d 83C410   		addl	$16, %esp
  40:vuln.c        **** 
  41:vuln.c        ****   unsigned l = (plen < ulen) ? plen : ulen;
 157              		.loc 1 41 0
 158 0140 8B4514   		movl	20(%ebp), %eax
 159 0143 39450C   		cmpl	%eax, 12(%ebp)
 160 0146 0F4E450C 		cmovle	12(%ebp), %eax
 161 014a 8945F0   		movl	%eax, -16(%ebp)
  42:vuln.c        ****   return (strncmp(user, pass, l) == 0);
 162              		.loc 1 42 0
 163 014d 83EC04   		subl	$4, %esp
 164 0150 FF75F0   		pushl	-16(%ebp)
 165 0153 FF75E0   		pushl	-32(%ebp)
 166 0156 FF75EC   		pushl	-20(%ebp)
GAS LISTING /tmp/cco8dxKI.s 			page 5


 167 0159 E8FCFFFF 		call	strncmp
 167      FF
 168 015e 83C410   		addl	$16, %esp
 169 0161 85C0     		testl	%eax, %eax
 170 0163 0F94C0   		sete	%al
 171 0166 0FB6C0   		movzbl	%al, %eax
  43:vuln.c        **** }
 172              		.loc 1 43 0
 173 0169 8B4DF4   		movl	-12(%ebp), %ecx
 174 016c 65330D14 		xorl	%gs:20, %ecx
 174      000000
 175 0173 7405     		je	.L9
 176 0175 E8FCFFFF 		call	__stack_chk_fail
 176      FF
 177              	.L9:
 178 017a C9       		leave
 179              		.cfi_restore 5
 180              		.cfi_def_cfa 4, 4
 181 017b C3       		ret
 182              		.cfi_endproc
 183              	.LFE3:
 185              		.globl	wrauth
 187              	wrauth:
 188              	.LFB4:
  44:vuln.c        **** 
  45:vuln.c        **** int wrauth(const char *username, int ulen, const char *pass, int plen) {
 189              		.loc 1 45 0
 190              		.cfi_startproc
 191 017c 55       		pushl	%ebp
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 5, -8
 194 017d 89E5     		movl	%esp, %ebp
 195              		.cfi_def_cfa_register 5
 196 017f 83EC08   		subl	$8, %esp
  46:vuln.c        ****    return auth(username, ulen, pass, plen);
 197              		.loc 1 46 0
 198 0182 FF7514   		pushl	20(%ebp)
 199 0185 FF7510   		pushl	16(%ebp)
 200 0188 FF750C   		pushl	12(%ebp)
 201 018b FF7508   		pushl	8(%ebp)
 202 018e E8FCFFFF 		call	auth
 202      FF
 203 0193 83C410   		addl	$16, %esp
  47:vuln.c        **** }
 204              		.loc 1 47 0
 205 0196 C9       		leave
 206              		.cfi_restore 5
 207              		.cfi_def_cfa 4, 4
 208 0197 C3       		ret
 209              		.cfi_endproc
 210              	.LFE4:
 212              		.comm	login_attempts,4,4
 213              		.section	.rodata
 214              	.LC1:
 215 0009 2F62696E 		.string	"/bin/ls"
 215      2F6C7300 
 216              	.LC2:
GAS LISTING /tmp/cco8dxKI.s 			page 6


 217 0011 2F62696E 		.string	"/bin/false"
 217      2F66616C 
 217      736500
 218              		.align 4
 219              	.LC3:
 220 001c 41757468 		.string	"Authentication succeeded, executing ls\n"
 220      656E7469 
 220      63617469 
 220      6F6E2073 
 220      75636365 
 221              	.LC4:
 222 0044 6C7300   		.string	"ls"
 223              	.LC5:
 224 0047 76756C6E 		.string	"vuln.c"
 224      2E6300
 225              	.LC6:
 226 004e 46617461 		.string	"Fatal error: %s:%d: "
 226      6C206572 
 226      726F723A 
 226      2025733A 
 226      25643A20 
 227              	.LC7:
 228 0063 00       		.string	""
 229              	.LC8:
 230 0064 4C6F6769 		.string	"Login denied, "
 230      6E206465 
 230      6E696564 
 230      2C2000
 231              	.LC9:
 232 0073 65786563 		.string	"executing /bin/false\n"
 232      7574696E 
 232      67202F62 
 232      696E2F66 
 232      616C7365 
 233              	.LC10:
 234 0089 66616C73 		.string	"false"
 234      6500
 235              	.LC11:
 236 008f 74727920 		.string	"try again\n"
 236      61676169 
 236      6E0A00
 237              		.text
 238              		.globl	g
 240              	g:
 241              	.LFB5:
  48:vuln.c        **** 
  49:vuln.c        **** int login_attempts;
  50:vuln.c        **** void g(const char *username, int ulen, const char *pass, int plen) {
 242              		.loc 1 50 0
 243              		.cfi_startproc
 244 0198 55       		pushl	%ebp
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 5, -8
 247 0199 89E5     		movl	%esp, %ebp
 248              		.cfi_def_cfa_register 5
 249 019b 83EC18   		subl	$24, %esp
  51:vuln.c        ****   int authd=0;
GAS LISTING /tmp/cco8dxKI.s 			page 7


 250              		.loc 1 51 0
 251 019e C745EC00 		movl	$0, -20(%ebp)
 251      000000
  52:vuln.c        ****   char *s1 = "/bin/ls";
 252              		.loc 1 52 0
 253 01a5 C745F009 		movl	$.LC1, -16(%ebp)
 253      000000
  53:vuln.c        ****   char *s2 = "/bin/false";
 254              		.loc 1 53 0
 255 01ac C745F411 		movl	$.LC2, -12(%ebp)
 255      000000
  54:vuln.c        ****   if (RANDOM) 
  55:vuln.c        ****      authd |= wrauth(username, ulen, pass, plen);
  56:vuln.c        ****   else authd |= auth(username, ulen, pass, plen);
 256              		.loc 1 56 0
 257 01b3 FF7514   		pushl	20(%ebp)
 258 01b6 FF7510   		pushl	16(%ebp)
 259 01b9 FF750C   		pushl	12(%ebp)
 260 01bc FF7508   		pushl	8(%ebp)
 261 01bf E8FCFFFF 		call	auth
 261      FF
 262 01c4 83C410   		addl	$16, %esp
 263 01c7 0945EC   		orl	%eax, -20(%ebp)
  57:vuln.c        **** 
  58:vuln.c        ****   if (authd) {
 264              		.loc 1 58 0
 265 01ca 837DEC00 		cmpl	$0, -20(%ebp)
 266 01ce 7468     		je	.L13
  59:vuln.c        ****      // Successfully authenticated
  60:vuln.c        ****      fprintf(stderr, "Authentication succeeded, executing ls\n");
 267              		.loc 1 60 0
 268 01d0 A1000000 		movl	stderr, %eax
 268      00
 269 01d5 50       		pushl	%eax
 270 01d6 6A27     		pushl	$39
 271 01d8 6A01     		pushl	$1
 272 01da 681C0000 		pushl	$.LC3
 272      00
 273 01df E8FCFFFF 		call	fwrite
 273      FF
 274 01e4 83C410   		addl	$16, %esp
  61:vuln.c        ****      err_abort(execl(s1, "ls", NULL)>=0); // Execute a shell, or
 275              		.loc 1 61 0
 276 01e7 83EC04   		subl	$4, %esp
 277 01ea 6A00     		pushl	$0
 278 01ec 68440000 		pushl	$.LC4
 278      00
 279 01f1 FF75F0   		pushl	-16(%ebp)
 280 01f4 E8FCFFFF 		call	execl
 280      FF
 281 01f9 83C410   		addl	$16, %esp
 282 01fc 85C0     		testl	%eax, %eax
 283 01fe 0F89D900 		jns	.L16
 283      0000
 284              		.loc 1 61 0 is_stmt 0 discriminator 1
 285 0204 A1000000 		movl	stderr, %eax
 285      00
GAS LISTING /tmp/cco8dxKI.s 			page 8


 286 0209 6A3D     		pushl	$61
 287 020b 68470000 		pushl	$.LC5
 287      00
 288 0210 684E0000 		pushl	$.LC6
 288      00
 289 0215 50       		pushl	%eax
 290 0216 E8FCFFFF 		call	fprintf
 290      FF
 291 021b 83C410   		addl	$16, %esp
 292 021e 83EC0C   		subl	$12, %esp
 293 0221 68630000 		pushl	$.LC7
 293      00
 294 0226 E8FCFFFF 		call	perror
 294      FF
 295 022b 83C410   		addl	$16, %esp
 296 022e 83EC0C   		subl	$12, %esp
 297 0231 6A01     		pushl	$1
 298 0233 E8FCFFFF 		call	exit
 298      FF
 299              	.L13:
  62:vuln.c        ****   }
  63:vuln.c        ****   else { // Authentication failure
  64:vuln.c        ****      fprintf(stderr, "Login denied, ");
 300              		.loc 1 64 0 is_stmt 1
 301 0238 A1000000 		movl	stderr, %eax
 301      00
 302 023d 50       		pushl	%eax
 303 023e 6A0E     		pushl	$14
 304 0240 6A01     		pushl	$1
 305 0242 68640000 		pushl	$.LC8
 305      00
 306 0247 E8FCFFFF 		call	fwrite
 306      FF
 307 024c 83C410   		addl	$16, %esp
  65:vuln.c        ****      if (login_attempts++ > 3) {
 308              		.loc 1 65 0
 309 024f A1000000 		movl	login_attempts, %eax
 309      00
 310 0254 8D5001   		leal	1(%eax), %edx
 311 0257 89150000 		movl	%edx, login_attempts
 311      0000
 312 025d 83F803   		cmpl	$3, %eax
 313 0260 7E64     		jle	.L15
  66:vuln.c        ****         fprintf(stderr, "executing /bin/false\n");
 314              		.loc 1 66 0
 315 0262 A1000000 		movl	stderr, %eax
 315      00
 316 0267 50       		pushl	%eax
 317 0268 6A15     		pushl	$21
 318 026a 6A01     		pushl	$1
 319 026c 68730000 		pushl	$.LC9
 319      00
 320 0271 E8FCFFFF 		call	fwrite
 320      FF
 321 0276 83C410   		addl	$16, %esp
  67:vuln.c        ****         err_abort(execl(s2, "false", NULL)>=0); // a program that prints an error
 322              		.loc 1 67 0
GAS LISTING /tmp/cco8dxKI.s 			page 9


 323 0279 83EC04   		subl	$4, %esp
 324 027c 6A00     		pushl	$0
 325 027e 68890000 		pushl	$.LC10
 325      00
 326 0283 FF75F4   		pushl	-12(%ebp)
 327 0286 E8FCFFFF 		call	execl
 327      FF
 328 028b 83C410   		addl	$16, %esp
 329 028e 85C0     		testl	%eax, %eax
 330 0290 794B     		jns	.L16
 331              		.loc 1 67 0 is_stmt 0 discriminator 1
 332 0292 A1000000 		movl	stderr, %eax
 332      00
 333 0297 6A43     		pushl	$67
 334 0299 68470000 		pushl	$.LC5
 334      00
 335 029e 684E0000 		pushl	$.LC6
 335      00
 336 02a3 50       		pushl	%eax
 337 02a4 E8FCFFFF 		call	fprintf
 337      FF
 338 02a9 83C410   		addl	$16, %esp
 339 02ac 83EC0C   		subl	$12, %esp
 340 02af 68630000 		pushl	$.LC7
 340      00
 341 02b4 E8FCFFFF 		call	perror
 341      FF
 342 02b9 83C410   		addl	$16, %esp
 343 02bc 83EC0C   		subl	$12, %esp
 344 02bf 6A01     		pushl	$1
 345 02c1 E8FCFFFF 		call	exit
 345      FF
 346              	.L15:
  68:vuln.c        ****      }
  69:vuln.c        ****      else fprintf(stderr, "try again\n");
 347              		.loc 1 69 0 is_stmt 1
 348 02c6 A1000000 		movl	stderr, %eax
 348      00
 349 02cb 50       		pushl	%eax
 350 02cc 6A0A     		pushl	$10
 351 02ce 6A01     		pushl	$1
 352 02d0 688F0000 		pushl	$.LC11
 352      00
 353 02d5 E8FCFFFF 		call	fwrite
 353      FF
 354 02da 83C410   		addl	$16, %esp
 355              	.L16:
  70:vuln.c        ****   }
  71:vuln.c        **** }
 356              		.loc 1 71 0
 357 02dd 90       		nop
 358 02de C9       		leave
 359              		.cfi_restore 5
 360              		.cfi_def_cfa 4, 4
 361 02df C3       		ret
 362              		.cfi_endproc
 363              	.LFE5:
GAS LISTING /tmp/cco8dxKI.s 			page 10


 365              		.section	.rodata
 366              	.LC12:
 367 009a 6F776E6D 		.string	"ownme called\n"
 367      65206361 
 367      6C6C6564 
 367      0A00
 368              		.text
 369              		.globl	ownme
 371              	ownme:
 372              	.LFB6:
  72:vuln.c        **** 
  73:vuln.c        **** #ifndef ASM_ONLY
  74:vuln.c        **** void padding() {
  75:vuln.c        **** int i, z;
  76:vuln.c        **** #include "padding.h"
  77:vuln.c        **** }
  78:vuln.c        **** #endif
  79:vuln.c        **** 
  80:vuln.c        **** void ownme() {
 373              		.loc 1 80 0
 374              		.cfi_startproc
 375 02e0 55       		pushl	%ebp
 376              		.cfi_def_cfa_offset 8
 377              		.cfi_offset 5, -8
 378 02e1 89E5     		movl	%esp, %ebp
 379              		.cfi_def_cfa_register 5
 380 02e3 83EC08   		subl	$8, %esp
  81:vuln.c        ****    fprintf(stderr, "ownme called\n");
 381              		.loc 1 81 0
 382 02e6 A1000000 		movl	stderr, %eax
 382      00
 383 02eb 50       		pushl	%eax
 384 02ec 6A0D     		pushl	$13
 385 02ee 6A01     		pushl	$1
 386 02f0 689A0000 		pushl	$.LC12
 386      00
 387 02f5 E8FCFFFF 		call	fwrite
 387      FF
 388 02fa 83C410   		addl	$16, %esp
  82:vuln.c        **** }
 389              		.loc 1 82 0
 390 02fd 90       		nop
 391 02fe C9       		leave
 392              		.cfi_restore 5
 393              		.cfi_def_cfa 4, 4
 394 02ff C3       		ret
 395              		.cfi_endproc
 396              	.LFE6:
 398              		.section	.rodata
 399              	.LC13:
 400 00a8 76756C6E 		.string	"vuln: quitting\n"
 400      3A207175 
 400      69747469 
 400      6E670A00 
 401              	.LC14:
 402 00b8 76756C6E 		.string	"vuln: Received:'"
 402      3A205265 
GAS LISTING /tmp/cco8dxKI.s 			page 11


 402      63656976 
 402      65643A27 
 402      00
 403              	.LC15:
 404 00c9 270A00   		.string	"'\n"
 405              	.LC16:
 406 00cc 76756C6E 		.string	"vuln: Got user=%s, pass=%s\n"
 406      3A20476F 
 406      74207573 
 406      65723D25 
 406      732C2070 
 407              		.align 4
 408              	.LC17:
 409 00e8 76756C6E 		.string	"vuln: Use u and p commands before logging in\n"
 409      3A205573 
 409      65207520 
 409      616E6420 
 409      7020636F 
 410 0116 0000     		.align 4
 411              	.LC18:
 412 0118 76756C6E 		.string	"vuln: Invalid operation. Valid commands are:\n"
 412      3A20496E 
 412      76616C69 
 412      64206F70 
 412      65726174 
 413              	.LC19:
 414 0146 0965203C 		.string	"\te <data>: echo <data>\n"
 414      64617461 
 414      3E3A2065 
 414      63686F20 
 414      3C646174 
 415              	.LC20:
 416 015e 0975203C 		.string	"\tu <user>: enter username\n"
 416      75736572 
 416      3E3A2065 
 416      6E746572 
 416      20757365 
 417              	.LC21:
 418 0179 0970203C 		.string	"\tp <pass>: enter password\n"
 418      70617373 
 418      3E3A2065 
 418      6E746572 
 418      20706173 
 419              		.align 4
 420              	.LC22:
 421 0194 096C3A20 		.string	"\tl: login using previously provided username/password\n"
 421      6C6F6769 
 421      6E207573 
 421      696E6720 
 421      70726576 
 422              	.LC23:
 423 01cb 09713A20 		.string	"\tq: quit\n"
 423      71756974 
 423      0A00
 424              		.text
 425              		.globl	main_loop
 427              	main_loop:
GAS LISTING /tmp/cco8dxKI.s 			page 12


 428              	.LFB7:
  83:vuln.c        **** 
  84:vuln.c        **** int main_loop(unsigned seed) {
 429              		.loc 1 84 0
 430              		.cfi_startproc
 431 0300 55       		pushl	%ebp
 432              		.cfi_def_cfa_offset 8
 433              		.cfi_offset 5, -8
 434 0301 89E5     		movl	%esp, %ebp
 435              		.cfi_def_cfa_register 5
 436 0303 83EC38   		subl	$56, %esp
 437              		.loc 1 84 0
 438 0306 65A11400 		movl	%gs:20, %eax
 438      0000
 439 030c 8945F4   		movl	%eax, -12(%ebp)
 440 030f 31C0     		xorl	%eax, %eax
  85:vuln.c        ****    int nread;
  86:vuln.c        ****    char *user=NULL, *pass=NULL;
 441              		.loc 1 86 0
 442 0311 C745D000 		movl	$0, -48(%ebp)
 442      000000
 443 0318 C745D400 		movl	$0, -44(%ebp)
 443      000000
  87:vuln.c        ****    unsigned ulen=0, plen=0;
 444              		.loc 1 87 0
 445 031f C745D800 		movl	$0, -40(%ebp)
 445      000000
 446 0326 C745DC00 		movl	$0, -36(%ebp)
 446      000000
  88:vuln.c        **** 
  89:vuln.c        ****    srandom(seed-990);
 447              		.loc 1 89 0
 448 032d 8B4508   		movl	8(%ebp), %eax
 449 0330 2DDE0300 		subl	$990, %eax
 449      00
 450 0335 83EC0C   		subl	$12, %esp
 451 0338 50       		pushl	%eax
 452 0339 E8FCFFFF 		call	srandom
 452      FF
 453 033e 83C410   		addl	$16, %esp
  90:vuln.c        ****    unsigned s = (unsigned)random();
 454              		.loc 1 90 0
 455 0341 E8FCFFFF 		call	random
 455      FF
 456 0346 8945E0   		movl	%eax, -32(%ebp)
  91:vuln.c        ****    s = LEN1 + (s % LEN1);
 457              		.loc 1 91 0
 458 0349 8B4DE0   		movl	-32(%ebp), %ecx
 459 034c BA6D90C0 		movl	$12619885, %edx
 459      00
 460 0351 89C8     		movl	%ecx, %eax
 461 0353 F7E2     		mull	%edx
 462 0355 89C8     		movl	%ecx, %eax
 463 0357 29D0     		subl	%edx, %eax
 464 0359 D1E8     		shrl	%eax
 465 035b 01D0     		addl	%edx, %eax
 466 035d C1E809   		shrl	$9, %eax
GAS LISTING /tmp/cco8dxKI.s 			page 13


 467 0360 69C0FD03 		imull	$1021, %eax, %eax
 467      0000
 468 0366 29C1     		subl	%eax, %ecx
 469 0368 89C8     		movl	%ecx, %eax
 470 036a 05FD0300 		addl	$1021, %eax
 470      00
 471 036f 8945E0   		movl	%eax, -32(%ebp)
  92:vuln.c        ****    char *rdbuf = (char*)alloca(s);
 472              		.loc 1 92 0
 473 0372 8B45E0   		movl	-32(%ebp), %eax
 474 0375 8D500F   		leal	15(%eax), %edx
 475 0378 B8100000 		movl	$16, %eax
 475      00
 476 037d 83E801   		subl	$1, %eax
 477 0380 01D0     		addl	%edx, %eax
 478 0382 B9100000 		movl	$16, %ecx
 478      00
 479 0387 BA000000 		movl	$0, %edx
 479      00
 480 038c F7F1     		divl	%ecx
 481 038e 6BC010   		imull	$16, %eax, %eax
 482 0391 29C4     		subl	%eax, %esp
 483 0393 89E0     		movl	%esp, %eax
 484 0395 83C00F   		addl	$15, %eax
 485 0398 C1E804   		shrl	$4, %eax
 486 039b C1E004   		sall	$4, %eax
 487 039e 8945E4   		movl	%eax, -28(%ebp)
  93:vuln.c        ****    char *tbuf;
  94:vuln.c        ****    unsigned tbufsz = ((unsigned)random()) % LEN1;
 488              		.loc 1 94 0
 489 03a1 E8FCFFFF 		call	random
 489      FF
 490 03a6 89C1     		movl	%eax, %ecx
 491 03a8 BA6D90C0 		movl	$12619885, %edx
 491      00
 492 03ad 89C8     		movl	%ecx, %eax
 493 03af F7E2     		mull	%edx
 494 03b1 89C8     		movl	%ecx, %eax
 495 03b3 29D0     		subl	%edx, %eax
 496 03b5 D1E8     		shrl	%eax
 497 03b7 01D0     		addl	%edx, %eax
 498 03b9 C1E809   		shrl	$9, %eax
 499 03bc 8945E8   		movl	%eax, -24(%ebp)
 500 03bf 8B45E8   		movl	-24(%ebp), %eax
 501 03c2 69C0FD03 		imull	$1021, %eax, %eax
 501      0000
 502 03c8 29C1     		subl	%eax, %ecx
 503 03ca 89C8     		movl	%ecx, %eax
 504 03cc 8945E8   		movl	%eax, -24(%ebp)
  95:vuln.c        ****    tbuf = (char*)alloca(tbufsz);
 505              		.loc 1 95 0
 506 03cf 8B45E8   		movl	-24(%ebp), %eax
 507 03d2 8D500F   		leal	15(%eax), %edx
 508 03d5 B8100000 		movl	$16, %eax
 508      00
 509 03da 83E801   		subl	$1, %eax
 510 03dd 01D0     		addl	%edx, %eax
GAS LISTING /tmp/cco8dxKI.s 			page 14


 511 03df B9100000 		movl	$16, %ecx
 511      00
 512 03e4 BA000000 		movl	$0, %edx
 512      00
 513 03e9 F7F1     		divl	%ecx
 514 03eb 6BC010   		imull	$16, %eax, %eax
 515 03ee 29C4     		subl	%eax, %esp
 516 03f0 89E0     		movl	%esp, %eax
 517 03f2 83C00F   		addl	$15, %eax
 518 03f5 C1E804   		shrl	$4, %eax
 519 03f8 C1E004   		sall	$4, %eax
 520 03fb 8945EC   		movl	%eax, -20(%ebp)
 521              	.L32:
  96:vuln.c        **** 
  97:vuln.c        ****    do {
  98:vuln.c        ****       err_abort((nread = read(0, rdbuf, s-1)) >= 0);
 522              		.loc 1 98 0
 523 03fe 8B45E0   		movl	-32(%ebp), %eax
 524 0401 83E801   		subl	$1, %eax
 525 0404 83EC04   		subl	$4, %esp
 526 0407 50       		pushl	%eax
 527 0408 FF75E4   		pushl	-28(%ebp)
 528 040b 6A00     		pushl	$0
 529 040d E8FCFFFF 		call	read
 529      FF
 530 0412 83C410   		addl	$16, %esp
 531 0415 8945F0   		movl	%eax, -16(%ebp)
 532 0418 837DF000 		cmpl	$0, -16(%ebp)
 533 041c 7934     		jns	.L19
 534              		.loc 1 98 0 is_stmt 0 discriminator 1
 535 041e A1000000 		movl	stderr, %eax
 535      00
 536 0423 6A62     		pushl	$98
 537 0425 68470000 		pushl	$.LC5
 537      00
 538 042a 684E0000 		pushl	$.LC6
 538      00
 539 042f 50       		pushl	%eax
 540 0430 E8FCFFFF 		call	fprintf
 540      FF
 541 0435 83C410   		addl	$16, %esp
 542 0438 83EC0C   		subl	$12, %esp
 543 043b 68630000 		pushl	$.LC7
 543      00
 544 0440 E8FCFFFF 		call	perror
 544      FF
 545 0445 83C410   		addl	$16, %esp
 546 0448 83EC0C   		subl	$12, %esp
 547 044b 6A01     		pushl	$1
 548 044d E8FCFFFF 		call	exit
 548      FF
 549              	.L19:
  99:vuln.c        ****       if (nread == 0) {
 550              		.loc 1 99 0 is_stmt 1
 551 0452 837DF000 		cmpl	$0, -16(%ebp)
 552 0456 7521     		jne	.L20
 100:vuln.c        ****          fprintf(stderr, "vuln: quitting\n");
GAS LISTING /tmp/cco8dxKI.s 			page 15


 553              		.loc 1 100 0
 554 0458 A1000000 		movl	stderr, %eax
 554      00
 555 045d 50       		pushl	%eax
 556 045e 6A0F     		pushl	$15
 557 0460 6A01     		pushl	$1
 558 0462 68A80000 		pushl	$.LC13
 558      00
 559 0467 E8FCFFFF 		call	fwrite
 559      FF
 560 046c 83C410   		addl	$16, %esp
 101:vuln.c        ****          return 0;
 561              		.loc 1 101 0
 562 046f B8000000 		movl	$0, %eax
 562      00
 563 0474 E9490200 		jmp	.L21
 563      00
 564              	.L20:
 102:vuln.c        ****       }
 103:vuln.c        ****       fprintf(stderr, "vuln: Received:'");
 565              		.loc 1 103 0
 566 0479 A1000000 		movl	stderr, %eax
 566      00
 567 047e 50       		pushl	%eax
 568 047f 6A10     		pushl	$16
 569 0481 6A01     		pushl	$1
 570 0483 68B80000 		pushl	$.LC14
 570      00
 571 0488 E8FCFFFF 		call	fwrite
 571      FF
 572 048d 83C410   		addl	$16, %esp
 104:vuln.c        ****       print_escaped(stderr, rdbuf, nread);
 573              		.loc 1 104 0
 574 0490 8B55F0   		movl	-16(%ebp), %edx
 575 0493 A1000000 		movl	stderr, %eax
 575      00
 576 0498 83EC04   		subl	$4, %esp
 577 049b 52       		pushl	%edx
 578 049c FF75E4   		pushl	-28(%ebp)
 579 049f 50       		pushl	%eax
 580 04a0 E8FCFFFF 		call	print_escaped
 580      FF
 581 04a5 83C410   		addl	$16, %esp
 105:vuln.c        ****       fprintf(stderr, "'\n");
 582              		.loc 1 105 0
 583 04a8 A1000000 		movl	stderr, %eax
 583      00
 584 04ad 50       		pushl	%eax
 585 04ae 6A02     		pushl	$2
 586 04b0 6A01     		pushl	$1
 587 04b2 68C90000 		pushl	$.LC15
 587      00
 588 04b7 E8FCFFFF 		call	fwrite
 588      FF
 589 04bc 83C410   		addl	$16, %esp
 106:vuln.c        ****       rdbuf[nread] = '\0'; // null-terminate
 590              		.loc 1 106 0
GAS LISTING /tmp/cco8dxKI.s 			page 16


 591 04bf 8B55F0   		movl	-16(%ebp), %edx
 592 04c2 8B45E4   		movl	-28(%ebp), %eax
 593 04c5 01D0     		addl	%edx, %eax
 594 04c7 C60000   		movb	$0, (%eax)
 107:vuln.c        ****       switch (rdbuf[0]) {
 595              		.loc 1 107 0
 596 04ca 8B45E4   		movl	-28(%ebp), %eax
 597 04cd 0FB600   		movzbl	(%eax), %eax
 598 04d0 0FBEC0   		movsbl	%al, %eax
 599 04d3 83E865   		subl	$101, %eax
 600 04d6 83F810   		cmpl	$16, %eax
 601 04d9 0F875301 		ja	.L22
 601      0000
 602 04df 8B0485D8 		movl	.L24(,%eax,4), %eax
 602      010000
 603 04e6 FFE0     		jmp	*%eax
 604              		.section	.rodata
 605 01d5 000000   		.align 4
 606              		.align 4
 607              	.L24:
 608 01d8 E8040000 		.long	.L23
 609 01dc 32060000 		.long	.L22
 610 01e0 32060000 		.long	.L22
 611 01e4 32060000 		.long	.L22
 612 01e8 32060000 		.long	.L22
 613 01ec 32060000 		.long	.L22
 614 01f0 32060000 		.long	.L22
 615 01f4 7E050000 		.long	.L25
 616 01f8 32060000 		.long	.L22
 617 01fc 32060000 		.long	.L22
 618 0200 32060000 		.long	.L22
 619 0204 47050000 		.long	.L26
 620 0208 11060000 		.long	.L27
 621 020c 32060000 		.long	.L22
 622 0210 32060000 		.long	.L22
 623 0214 32060000 		.long	.L22
 624 0218 10050000 		.long	.L28
 625              		.text
 626              	.L23:
 108:vuln.c        **** 
 109:vuln.c        ****       case 'e': // echo command: e <string_to_echo>
 110:vuln.c        ****          printf(&rdbuf[2]);
 627              		.loc 1 110 0
 628 04e8 8B45E4   		movl	-28(%ebp), %eax
 629 04eb 83C002   		addl	$2, %eax
 630 04ee 83EC0C   		subl	$12, %esp
 631 04f1 50       		pushl	%eax
 632 04f2 E8FCFFFF 		call	printf
 632      FF
 633 04f7 83C410   		addl	$16, %esp
 111:vuln.c        ****          fflush(stdout);
 634              		.loc 1 111 0
 635 04fa A1000000 		movl	stdout, %eax
 635      00
 636 04ff 83EC0C   		subl	$12, %esp
 637 0502 50       		pushl	%eax
 638 0503 E8FCFFFF 		call	fflush
GAS LISTING /tmp/cco8dxKI.s 			page 17


 638      FF
 639 0508 83C410   		addl	$16, %esp
 112:vuln.c        ****          break;
 640              		.loc 1 112 0
 641 050b E9AD0100 		jmp	.L29
 641      00
 642              	.L28:
 113:vuln.c        **** 
 114:vuln.c        ****       case 'u': // provide username
 115:vuln.c        ****          ulen = nread-3; // skips last char
 643              		.loc 1 115 0
 644 0510 8B45F0   		movl	-16(%ebp), %eax
 645 0513 83E803   		subl	$3, %eax
 646 0516 8945D8   		movl	%eax, -40(%ebp)
 116:vuln.c        ****          user = malloc(ulen);
 647              		.loc 1 116 0
 648 0519 83EC0C   		subl	$12, %esp
 649 051c FF75D8   		pushl	-40(%ebp)
 650 051f E8FCFFFF 		call	my_malloc
 650      FF
 651 0524 83C410   		addl	$16, %esp
 652 0527 8945D0   		movl	%eax, -48(%ebp)
 117:vuln.c        ****          bcopy(&rdbuf[2], user, ulen);
 653              		.loc 1 117 0
 654 052a 8B45E4   		movl	-28(%ebp), %eax
 655 052d 83C002   		addl	$2, %eax
 656 0530 83EC04   		subl	$4, %esp
 657 0533 FF75D8   		pushl	-40(%ebp)
 658 0536 FF75D0   		pushl	-48(%ebp)
 659 0539 50       		pushl	%eax
 660 053a E8FCFFFF 		call	bcopy
 660      FF
 661 053f 83C410   		addl	$16, %esp
 118:vuln.c        ****          break;
 662              		.loc 1 118 0
 663 0542 E9760100 		jmp	.L29
 663      00
 664              	.L26:
 119:vuln.c        **** 
 120:vuln.c        ****       case 'p': // provide username
 121:vuln.c        ****          pass = malloc(plen);
 665              		.loc 1 121 0
 666 0547 83EC0C   		subl	$12, %esp
 667 054a FF75DC   		pushl	-36(%ebp)
 668 054d E8FCFFFF 		call	my_malloc
 668      FF
 669 0552 83C410   		addl	$16, %esp
 670 0555 8945D4   		movl	%eax, -44(%ebp)
 122:vuln.c        ****          plen = nread-3;
 671              		.loc 1 122 0
 672 0558 8B45F0   		movl	-16(%ebp), %eax
 673 055b 83E803   		subl	$3, %eax
 674 055e 8945DC   		movl	%eax, -36(%ebp)
 123:vuln.c        ****          bcopy(&rdbuf[2], pass, plen);
 675              		.loc 1 123 0
 676 0561 8B45E4   		movl	-28(%ebp), %eax
 677 0564 83C002   		addl	$2, %eax
GAS LISTING /tmp/cco8dxKI.s 			page 18


 678 0567 83EC04   		subl	$4, %esp
 679 056a FF75DC   		pushl	-36(%ebp)
 680 056d FF75D4   		pushl	-44(%ebp)
 681 0570 50       		pushl	%eax
 682 0571 E8FCFFFF 		call	bcopy
 682      FF
 683 0576 83C410   		addl	$16, %esp
 124:vuln.c        ****          break;
 684              		.loc 1 124 0
 685 0579 E93F0100 		jmp	.L29
 685      00
 686              	.L25:
 125:vuln.c        **** 
 126:vuln.c        ****       case 'l': { // login using previously supplied username and password
 127:vuln.c        ****          if (user != NULL && pass != NULL) {
 687              		.loc 1 127 0
 688 057e 837DD000 		cmpl	$0, -48(%ebp)
 689 0582 7471     		je	.L30
 690              		.loc 1 127 0 is_stmt 0 discriminator 1
 691 0584 837DD400 		cmpl	$0, -44(%ebp)
 692 0588 746B     		je	.L30
 128:vuln.c        ****             fprintf(stderr, "vuln: Got user=%s, pass=%s\n", user, pass);
 693              		.loc 1 128 0 is_stmt 1
 694 058a A1000000 		movl	stderr, %eax
 694      00
 695 058f FF75D4   		pushl	-44(%ebp)
 696 0592 FF75D0   		pushl	-48(%ebp)
 697 0595 68CC0000 		pushl	$.LC16
 697      00
 698 059a 50       		pushl	%eax
 699 059b E8FCFFFF 		call	fprintf
 699      FF
 700 05a0 83C410   		addl	$16, %esp
 129:vuln.c        ****             g(user, ulen, pass, plen);
 701              		.loc 1 129 0
 702 05a3 8B55DC   		movl	-36(%ebp), %edx
 703 05a6 8B45D8   		movl	-40(%ebp), %eax
 704 05a9 52       		pushl	%edx
 705 05aa FF75D4   		pushl	-44(%ebp)
 706 05ad 50       		pushl	%eax
 707 05ae FF75D0   		pushl	-48(%ebp)
 708 05b1 E8FCFFFF 		call	g
 708      FF
 709 05b6 83C410   		addl	$16, %esp
 130:vuln.c        ****             free(pass);
 710              		.loc 1 130 0
 711 05b9 83EC0C   		subl	$12, %esp
 712 05bc FF75D4   		pushl	-44(%ebp)
 713 05bf E8FCFFFF 		call	my_free
 713      FF
 714 05c4 83C410   		addl	$16, %esp
 131:vuln.c        ****             free(user);
 715              		.loc 1 131 0
 716 05c7 83EC0C   		subl	$12, %esp
 717 05ca FF75D0   		pushl	-48(%ebp)
 718 05cd E8FCFFFF 		call	my_free
 718      FF
GAS LISTING /tmp/cco8dxKI.s 			page 19


 719 05d2 83C410   		addl	$16, %esp
 132:vuln.c        ****             user=pass=NULL;
 720              		.loc 1 132 0
 721 05d5 C745D400 		movl	$0, -44(%ebp)
 721      000000
 722 05dc 8B45D4   		movl	-44(%ebp), %eax
 723 05df 8945D0   		movl	%eax, -48(%ebp)
 133:vuln.c        ****             ulen=0; plen=0;
 724              		.loc 1 133 0
 725 05e2 C745D800 		movl	$0, -40(%ebp)
 725      000000
 726 05e9 C745DC00 		movl	$0, -36(%ebp)
 726      000000
 134:vuln.c        ****          }
 135:vuln.c        ****          else fprintf(stderr, "vuln: Use u and p commands before logging in\n");
 136:vuln.c        ****          break;
 727              		.loc 1 136 0
 728 05f0 E9C80000 		jmp	.L29
 728      00
 729              	.L30:
 135:vuln.c        ****          break;
 730              		.loc 1 135 0
 731 05f5 A1000000 		movl	stderr, %eax
 731      00
 732 05fa 50       		pushl	%eax
 733 05fb 6A2D     		pushl	$45
 734 05fd 6A01     		pushl	$1
 735 05ff 68E80000 		pushl	$.LC17
 735      00
 736 0604 E8FCFFFF 		call	fwrite
 736      FF
 737 0609 83C410   		addl	$16, %esp
 738              		.loc 1 136 0
 739 060c E9AC0000 		jmp	.L29
 739      00
 740              	.L27:
 137:vuln.c        ****       }
 138:vuln.c        **** 
 139:vuln.c        ****       case 'q':
 140:vuln.c        ****          fprintf(stderr, "vuln: quitting\n");
 741              		.loc 1 140 0
 742 0611 A1000000 		movl	stderr, %eax
 742      00
 743 0616 50       		pushl	%eax
 744 0617 6A0F     		pushl	$15
 745 0619 6A01     		pushl	$1
 746 061b 68A80000 		pushl	$.LC13
 746      00
 747 0620 E8FCFFFF 		call	fwrite
 747      FF
 748 0625 83C410   		addl	$16, %esp
 141:vuln.c        ****          return 0;
 749              		.loc 1 141 0
 750 0628 B8000000 		movl	$0, %eax
 750      00
 751 062d E9900000 		jmp	.L21
 751      00
GAS LISTING /tmp/cco8dxKI.s 			page 20


 752              	.L22:
 142:vuln.c        **** 
 143:vuln.c        ****       default:
 144:vuln.c        ****          fprintf(stderr, "vuln: Invalid operation. Valid commands are:\n");
 753              		.loc 1 144 0
 754 0632 A1000000 		movl	stderr, %eax
 754      00
 755 0637 50       		pushl	%eax
 756 0638 6A2D     		pushl	$45
 757 063a 6A01     		pushl	$1
 758 063c 68180100 		pushl	$.LC18
 758      00
 759 0641 E8FCFFFF 		call	fwrite
 759      FF
 760 0646 83C410   		addl	$16, %esp
 145:vuln.c        ****          fprintf(stderr, "\te <data>: echo <data>\n");
 761              		.loc 1 145 0
 762 0649 A1000000 		movl	stderr, %eax
 762      00
 763 064e 50       		pushl	%eax
 764 064f 6A17     		pushl	$23
 765 0651 6A01     		pushl	$1
 766 0653 68460100 		pushl	$.LC19
 766      00
 767 0658 E8FCFFFF 		call	fwrite
 767      FF
 768 065d 83C410   		addl	$16, %esp
 146:vuln.c        ****          fprintf(stderr, "\tu <user>: enter username\n");
 769              		.loc 1 146 0
 770 0660 A1000000 		movl	stderr, %eax
 770      00
 771 0665 50       		pushl	%eax
 772 0666 6A1A     		pushl	$26
 773 0668 6A01     		pushl	$1
 774 066a 685E0100 		pushl	$.LC20
 774      00
 775 066f E8FCFFFF 		call	fwrite
 775      FF
 776 0674 83C410   		addl	$16, %esp
 147:vuln.c        ****          fprintf(stderr, "\tp <pass>: enter password\n");
 777              		.loc 1 147 0
 778 0677 A1000000 		movl	stderr, %eax
 778      00
 779 067c 50       		pushl	%eax
 780 067d 6A1A     		pushl	$26
 781 067f 6A01     		pushl	$1
 782 0681 68790100 		pushl	$.LC21
 782      00
 783 0686 E8FCFFFF 		call	fwrite
 783      FF
 784 068b 83C410   		addl	$16, %esp
 148:vuln.c        ****          fprintf(stderr, 
 785              		.loc 1 148 0
 786 068e A1000000 		movl	stderr, %eax
 786      00
 787 0693 50       		pushl	%eax
 788 0694 6A36     		pushl	$54
GAS LISTING /tmp/cco8dxKI.s 			page 21


 789 0696 6A01     		pushl	$1
 790 0698 68940100 		pushl	$.LC22
 790      00
 791 069d E8FCFFFF 		call	fwrite
 791      FF
 792 06a2 83C410   		addl	$16, %esp
 149:vuln.c        ****                  "\tl: login using previously provided username/password\n");
 150:vuln.c        ****          fprintf(stderr, "\tq: quit\n");
 793              		.loc 1 150 0
 794 06a5 A1000000 		movl	stderr, %eax
 794      00
 795 06aa 50       		pushl	%eax
 796 06ab 6A09     		pushl	$9
 797 06ad 6A01     		pushl	$1
 798 06af 68CB0100 		pushl	$.LC23
 798      00
 799 06b4 E8FCFFFF 		call	fwrite
 799      FF
 800 06b9 83C410   		addl	$16, %esp
 151:vuln.c        ****          break;
 801              		.loc 1 151 0
 802 06bc 90       		nop
 803              	.L29:
 152:vuln.c        ****       }
 153:vuln.c        ****    } while (1);
 804              		.loc 1 153 0 discriminator 1
 805 06bd E93CFDFF 		jmp	.L32
 805      FF
 806              	.L21:
 154:vuln.c        **** }
 807              		.loc 1 154 0
 808 06c2 8B4DF4   		movl	-12(%ebp), %ecx
 809 06c5 65330D14 		xorl	%gs:20, %ecx
 809      000000
 810 06cc 7405     		je	.L33
 811 06ce E8FCFFFF 		call	__stack_chk_fail
 811      FF
 812              	.L33:
 813 06d3 C9       		leave
 814              		.cfi_restore 5
 815              		.cfi_def_cfa 4, 4
 816 06d4 C3       		ret
 817              		.cfi_endproc
 818              	.LFE7:
 820              		.section	.rodata
 821              	.LC24:
 822 021c 55736167 		.string	"Usage: %s <group_id>\n"
 822      653A2025 
 822      73203C67 
 822      726F7570 
 822      5F69643E 
 823 0232 0000     		.align 4
 824              	.LC25:
 825 0234 3C67726F 		.string	"<group_id> must be between 0 and %d\n"
 825      75705F69 
 825      643E206D 
 825      75737420 
GAS LISTING /tmp/cco8dxKI.s 			page 22


 825      62652062 
 826              		.text
 827              		.globl	main
 829              	main:
 830              	.LFB8:
 155:vuln.c        **** 
 156:vuln.c        **** int main(int argc, char *argv[]) {
 831              		.loc 1 156 0
 832              		.cfi_startproc
 833 06d5 8D4C2404 		leal	4(%esp), %ecx
 834              		.cfi_def_cfa 1, 0
 835 06d9 83E4F0   		andl	$-16, %esp
 836 06dc FF71FC   		pushl	-4(%ecx)
 837 06df 55       		pushl	%ebp
 838              		.cfi_escape 0x10,0x5,0x2,0x75,0
 839 06e0 89E5     		movl	%esp, %ebp
 840 06e2 53       		pushl	%ebx
 841 06e3 51       		pushl	%ecx
 842              		.cfi_escape 0xf,0x3,0x75,0x78,0x6
 843              		.cfi_escape 0x10,0x3,0x2,0x75,0x7c
 844 06e4 83EC10   		subl	$16, %esp
 845 06e7 89CB     		movl	%ecx, %ebx
 157:vuln.c        **** 
 158:vuln.c        ****    unsigned seed=GRP;
 846              		.loc 1 158 0
 847 06e9 C745F487 		movl	$903, -12(%ebp)
 847      030000
 159:vuln.c        **** 
 160:vuln.c        ****    if (argc >= 2) seed = atoi(argv[1]);
 848              		.loc 1 160 0
 849 06f0 833B01   		cmpl	$1, (%ebx)
 850 06f3 7E17     		jle	.L35
 851              		.loc 1 160 0 is_stmt 0 discriminator 1
 852 06f5 8B4304   		movl	4(%ebx), %eax
 853 06f8 83C004   		addl	$4, %eax
 854 06fb 8B00     		movl	(%eax), %eax
 855 06fd 83EC0C   		subl	$12, %esp
 856 0700 50       		pushl	%eax
 857 0701 E8FCFFFF 		call	atoi
 857      FF
 858 0706 83C410   		addl	$16, %esp
 859 0709 8945F4   		movl	%eax, -12(%ebp)
 860              	.L35:
 161:vuln.c        ****    if (seed > MAX_GRP) {
 861              		.loc 1 161 0 is_stmt 1
 862 070c 817DF4E9 		cmpl	$1001, -12(%ebp)
 862      030000
 863 0713 7641     		jbe	.L36
 162:vuln.c        ****       fprintf(stderr, "Usage: %s <group_id>\n", argv[0]);
 864              		.loc 1 162 0
 865 0715 8B4304   		movl	4(%ebx), %eax
 866 0718 8B10     		movl	(%eax), %edx
 867 071a A1000000 		movl	stderr, %eax
 867      00
 868 071f 83EC04   		subl	$4, %esp
 869 0722 52       		pushl	%edx
 870 0723 681C0200 		pushl	$.LC24
GAS LISTING /tmp/cco8dxKI.s 			page 23


 870      00
 871 0728 50       		pushl	%eax
 872 0729 E8FCFFFF 		call	fprintf
 872      FF
 873 072e 83C410   		addl	$16, %esp
 163:vuln.c        ****       fprintf(stderr, "<group_id> must be between 0 and %d\n", MAX_GRP);
 874              		.loc 1 163 0
 875 0731 A1000000 		movl	stderr, %eax
 875      00
 876 0736 83EC04   		subl	$4, %esp
 877 0739 68E90300 		pushl	$1001
 877      00
 878 073e 68340200 		pushl	$.LC25
 878      00
 879 0743 50       		pushl	%eax
 880 0744 E8FCFFFF 		call	fprintf
 880      FF
 881 0749 83C410   		addl	$16, %esp
 164:vuln.c        ****       exit(1);
 882              		.loc 1 164 0
 883 074c 83EC0C   		subl	$12, %esp
 884 074f 6A01     		pushl	$1
 885 0751 E8FCFFFF 		call	exit
 885      FF
 886              	.L36:
 165:vuln.c        ****    }
 166:vuln.c        **** 
 167:vuln.c        ****   return main_loop(seed);
 887              		.loc 1 167 0
 888 0756 83EC0C   		subl	$12, %esp
 889 0759 FF75F4   		pushl	-12(%ebp)
 890 075c E8FCFFFF 		call	main_loop
 890      FF
 891 0761 83C410   		addl	$16, %esp
 168:vuln.c        **** };
 892              		.loc 1 168 0
 893 0764 8D65F8   		leal	-8(%ebp), %esp
 894 0767 59       		popl	%ecx
 895              		.cfi_restore 1
 896              		.cfi_def_cfa 1, 0
 897 0768 5B       		popl	%ebx
 898              		.cfi_restore 3
 899 0769 5D       		popl	%ebp
 900              		.cfi_restore 5
 901 076a 8D61FC   		leal	-4(%ecx), %esp
 902              		.cfi_def_cfa 4, 4
 903 076d C3       		ret
 904              		.cfi_endproc
 905              	.LFE8:
 907              	.Letext0:
 908              		.file 2 "/usr/lib/gcc/i686-linux-gnu/5/include/stddef.h"
 909              		.file 3 "/usr/include/i386-linux-gnu/bits/types.h"
 910              		.file 4 "/usr/include/stdio.h"
 911              		.file 5 "/usr/include/libio.h"
 912              		.file 6 "/usr/include/ctype.h"
GAS LISTING /tmp/cco8dxKI.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 vuln.c
     /tmp/cco8dxKI.s:10     .text:0000000000000000 print_escaped
     /tmp/cco8dxKI.s:106    .text:00000000000000c5 auth
     /tmp/cco8dxKI.s:187    .text:000000000000017c wrauth
                            *COM*:0000000000000004 login_attempts
     /tmp/cco8dxKI.s:240    .text:0000000000000198 g
     /tmp/cco8dxKI.s:371    .text:00000000000002e0 ownme
     /tmp/cco8dxKI.s:427    .text:0000000000000300 main_loop
     /tmp/cco8dxKI.s:829    .text:00000000000006d5 main

UNDEFINED SYMBOLS
__ctype_b_loc
stderr
fputc
fprintf
random
bcopy
strncmp
__stack_chk_fail
fwrite
execl
perror
exit
srandom
read
printf
stdout
fflush
my_malloc
my_free
atoi
